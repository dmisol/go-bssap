package abisrsl

import (
	"fmt"
	"testing"
)

var msgs = [][]byte{
	[]byte{0xc, 0x11, 0x1, 0x80, 0x1e, 0x1, 0x27, 0x17, 0x55, 0x6, 0x19, 0x8f, 0x37, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xe5, 0x4, 0x0, 0x2b}, // SI Type1
	[]byte{0x10, 0x1a, 0x1e, 0x5, 0xb, 0x0, 0x13, 0x49, 0x6, 0x1d, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0},                              // SI Type 5
	[]byte{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x0, 0x45, 0x0, 0x0, 0x3d, 0x80, 0xc4, 0x40, 0x0, 0x40, 0x6, 0xbb, 0xf4, 0x7f, 0x0, 0x0, 0x1, 0x7f, 0x0, 0x0, 0x1, 0xb, 0xbb, 0xa1, 0x5b, 0xfb, 0x45, 0x33, 0xe0, 0x3b, 0x75, 0xee, 0xa6, 0x80, 0x18, 0x0, 0x40, 0xfe, 0x31, 0x0, 0x0, 0x1, 0x1, 0x8, 0xa, 0x8e, 0xe0, 0xd, 0xbe, 0x8e, 0xe0, 0xd, 0xbe, 0x0, 0x6, 0x0, 0xc, 0x11, 0x1, 0x80, 0x1e, 0x29}, //BCCH Info
	[]byte{0x10, 0x1a, 0x1e, 0x6, 0xb, 0x0, 0xd, 0x2d, 0x6, 0x1e, 0x1b, 0x39, 0x16, 0xf2, 0x40, 0x0, 0x1, 0x27, 0xff, 0x2b}, // SACCH SI 6
	[]byte{0x10, 0x60, 0xd, 0x0, 0x4, 0x0, 0x1f, 0x37, 0x6, 0x20, 0x26, 0x30, 0xa, 0xa, 0xc, 0x13, 0x14, 0x5, 0x7, 0xf, 0x12, 0x2, 0x42, 0xf1, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf2, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, //IPA ext, meas preproc def
}

func TestParse(t *testing.T) {
	for k, v := range msgs {
		fmt.Println("Test", k)
		if _, _, err := Parse(v); err != nil {
			t.Fatal(err)
		}
		fmt.Println("ok")
	}
}
